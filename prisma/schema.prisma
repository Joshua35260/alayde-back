// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"] // Used for exclude fields from objects 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  firstname  String      @db.VarChar(50)
  lastname   String      @db.VarChar(50)
  login      String      @unique @db.VarChar(100)
  password   String      @db.VarChar(100)
  roles      Role[]      @relation("UserRoles") //many to many
  emails     Email[]     @relation("UserEmails")
  phones     Phone[]     @relation("UserPhones")
  addresses  Address[]   @relation("UserAddresses")
  structures Structure[] @relation("UserStructures")
}

model Role {
  role  String @id @db.VarChar(50)
  users User[] @relation("UserRoles") //many to many
}

model Structure {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  type      String?   @db.VarChar(100)
  service   String?   @db.VarChar(50)
  emails    Email[]   @relation("StructureEmails") //many to many
  phones    Phone[]   @relation("StructurePhones")
  addresses Address[] @relation("StructureAddresses")
  users     User[]    @relation("UserStructures")
}

model Address {
  id          Int        @id @default(autoincrement())
  country     String     @db.VarChar(100)
  postcode    String     @db.VarChar(20)
  city        String     @db.VarChar(100)
  street_l1   String     @db.VarChar(255)
  street_l2   String?    @db.VarChar(255)
  longitude   Decimal?   @db.Decimal(9, 6)
  latitude    Decimal?   @db.Decimal(9, 6)
  userId      Int? // Optionnel pour la relation avec User
  user        User?      @relation("UserAddresses", fields: [userId], references: [id]) // Relation optionnelle avec User
  structureId Int? // Optionnel pour la relation avec Structure
  structure   Structure? @relation("StructureAddresses", fields: [structureId], references: [id]) // Relation optionnelle avec Structure
}

model Email {
  id        Int         @id @default(autoincrement())
  email     String      @db.VarChar(100)
  type      String      @db.VarChar(50)
  user      User[]      @relation("UserEmails") //many to many
  structure Structure[] @relation("StructureEmails") //many to many
}

model Phone {
  id        Int         @id @default(autoincrement())
  phone     String      @db.VarChar(20)
  type      String      @db.VarChar(50)
  user      User[]      @relation("UserPhones") //many to many
  structure Structure[] @relation("StructurePhones") //many to many
}
