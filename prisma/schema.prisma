// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"] // Used for exclude fields from objects 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  firstname  String      @db.VarChar(50)
  lastname   String      @db.VarChar(50)
  login      String      @unique @db.VarChar(100)
  password   String      @db.VarChar(100)
  roles      Role[]      @relation("UserRoles") // 0,n
  emails     Email[]     @relation("UserEmails") // 0,n
  phones     Phone[]     @relation("UserPhones") // 0,n
  structures Structure[] @relation("UserStructures") //0,n
  addressId  Int // 1,1
  address    Address     @relation(fields: [addressId], references: [id]) // 1,1
  jobTypeId  String  //1,1
  jobType    JobType     @relation(fields: [jobTypeId], references: [jobType]) //1/1
}

model JobType {
  jobType String @id @db.VarChar(50)
  users   User[] //0,n
}

model Role {
  role  String @id @db.VarChar(50)
  users User[] @relation("UserRoles") //0,n
}

model Structure {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(100)
  type      String? @db.VarChar(100)
  service   String? @db.VarChar(50)
  emails    Email[] @relation("StructureEmails") //0,n
  phones    Phone[] @relation("StructurePhones") //0,n
  users     User[]  @relation("UserStructures") //0,n
  addressId Int //1/1
  address   Address @relation(fields: [addressId], references: [id]) //1/1
}

model Address {
  id         Int         @id @default(autoincrement())
  country    String      @db.VarChar(100)
  postcode   String      @db.VarChar(20)
  city       String      @db.VarChar(100)
  street_l1  String      @db.VarChar(255)
  street_l2  String?     @db.VarChar(255)
  longitude  Decimal?    @db.Decimal(9, 6)
  latitude   Decimal?    @db.Decimal(9, 6)
  user       User[] //0,n
  structures Structure[] //0,n
}

model Email {
  id        Int         @id @default(autoincrement())
  email     String      @db.VarChar(100)
  type      String      @db.VarChar(50)
  user      User[]      @relation("UserEmails") //0,n
  structure Structure[] @relation("StructureEmails") //0,n
}

model Phone {
  id        Int         @id @default(autoincrement())
  phone     String      @db.VarChar(20)
  type      String      @db.VarChar(50)
  user      User[]      @relation("UserPhones") //0,n
  structure Structure[] @relation("StructurePhones") //0,n
}
